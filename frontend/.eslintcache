[{"H:\\Udacity Projects\\readable-app\\frontend\\src\\App.js":"1","H:\\Udacity Projects\\readable-app\\frontend\\src\\index.js":"2","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Navbar.js":"3","H:\\Udacity Projects\\readable-app\\frontend\\src\\store.js":"4","H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\index.js":"5","H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\types.js":"6","H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\categories.js":"7","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Posts.js":"8","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Categories.js":"9","H:\\Udacity Projects\\readable-app\\frontend\\src\\utils\\api.js":"10","H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\categories.js":"11","H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\post.js":"12","H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\post.js":"13","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Spinner.js":"14","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\PostItem.js":"15","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\SinglePost.js":"16","H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\comments.js":"17","H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\comments.js":"18","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\AddPost.js":"19","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\CommentItem.js":"20","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\EditPost.js":"21","H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\EditComment.js":"22"},{"size":1154,"mtime":1607493876982,"results":"23","hashOfConfig":"24"},{"size":198,"mtime":1606635262458,"results":"25","hashOfConfig":"24"},{"size":381,"mtime":1606708416070,"results":"26","hashOfConfig":"24"},{"size":443,"mtime":1606650135827,"results":"27","hashOfConfig":"24"},{"size":239,"mtime":1607493724955,"results":"28","hashOfConfig":"24"},{"size":823,"mtime":1607570149090,"results":"29","hashOfConfig":"24"},{"size":680,"mtime":1606721667927,"results":"30","hashOfConfig":"24"},{"size":3979,"mtime":1607414210787,"results":"31","hashOfConfig":"24"},{"size":1747,"mtime":1606920984594,"results":"32","hashOfConfig":"24"},{"size":391,"mtime":1606707887917,"results":"33","hashOfConfig":"24"},{"size":473,"mtime":1606896482379,"results":"34","hashOfConfig":"24"},{"size":2950,"mtime":1607437654937,"results":"35","hashOfConfig":"24"},{"size":1483,"mtime":1607437495141,"results":"36","hashOfConfig":"24"},{"size":361,"mtime":1606879865691,"results":"37","hashOfConfig":"24"},{"size":1487,"mtime":1607139099404,"results":"38","hashOfConfig":"24"},{"size":6028,"mtime":1607582508410,"results":"39","hashOfConfig":"24"},{"size":2700,"mtime":1607582654097,"results":"40","hashOfConfig":"24"},{"size":1678,"mtime":1607582266153,"results":"41","hashOfConfig":"24"},{"size":2576,"mtime":1607582817114,"results":"42","hashOfConfig":"24"},{"size":1679,"mtime":1607506551724,"results":"43","hashOfConfig":"24"},{"size":2289,"mtime":1607438390471,"results":"44","hashOfConfig":"24"},{"size":2016,"mtime":1607577984954,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"12euiqk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Udacity Projects\\readable-app\\frontend\\src\\App.js",[],["98","99"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\index.js",[],["100","101"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Navbar.js",[],["102","103"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\store.js",[],["104","105"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\index.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\types.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\categories.js",[],["106","107"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Posts.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Categories.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\utils\\api.js",[],["108","109"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\categories.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\post.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\post.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\Spinner.js",[],["110","111"],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\PostItem.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\SinglePost.js",["112"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deletePost, getSinglePost, votePost } from '../actions/post';\r\nimport { getComments, addComment, getSingleComment } from '../actions/comments';\r\nimport Spinner from './Spinner';\r\nimport Moment from 'react-moment';\r\nimport CommentItem from './CommentItem';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SinglePost = ({ match, \r\n  getSinglePost,\r\n  votePost, \r\n  getComments,\r\n  deletePost,\r\n  history,\r\n  addComment,\r\n  comment: { comments, loader },\r\n  post: { post, loading } \r\n}) => {\r\n\r\n  const initialState = {\r\n    timestamp: Date.now(),\r\n    id: uuidv4(),\r\n    author: '',\r\n    body: '',\r\n    parentId: match.params.id\r\n  };\r\n\r\n  const [data, setData] = useState(initialState)\r\n  const [commentToggle, setCommentToggle] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n  getSinglePost(match.params.id);\r\n  getComments(match.params.id);\r\n  }, [getComments, getSinglePost, match.params.id]);\r\n\r\n  const { author, body } = data;\r\n\r\n  const onChangeHandle = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const onSubmitHandle = e => {\r\n    e.preventDefault();\r\n    addComment(data);\r\n    setCommentToggle(!commentToggle);\r\n    setData(e.target.value = \"\")\r\n  };\r\n\r\n  return (\r\n      <Fragment>\r\n          {\r\n              post === null || loading ? <Spinner /> : <Fragment>\r\n                  <section className=\"post-section\">\r\n                      <div className=\"single-title-top\">\r\n                          <h1 className=\"single-title\">{post.title}</h1>\r\n                      <div>\r\n                          <button><Link to={`/edit/${post.id}`}>Edit</Link></button>\r\n                          <button \r\n                            onClick={() => {\r\n                              deletePost(post.id);\r\n                              history.push('/');\r\n                            }}\r\n                          >Delete</button>\r\n                      </div>\r\n                      </div>\r\n                      <div>\r\n                          <p>\r\n                              <span>by {post.author}</span>, \r\n                              <span>on <Moment format='MMMM Do, YYYY'>{post.timestamp}</Moment></span>\r\n                          </p>\r\n                          <p>\r\n                              <span>Category: {post.category}</span>, \r\n                              <span>Total vote <span className=\"dot\">{post.voteScore}</span></span>\r\n                          </p>\r\n                      </div>\r\n                      <p>{post.body}</p>\r\n                      <div className=\"single-title-top\">\r\n                          <p>{\r\n                              post.commentCount > 1 ? \"Comments\" : \"Comment\"\r\n                              }{' '}\r\n                              <span className=\"dot\">{comments && comments.length}</span>\r\n                          </p>\r\n                          <div>\r\n                              <button \r\n                                onClick={() => votePost(post.id, 'upVote')}\r\n                                >\r\n                                UpVote\r\n                              </button>\r\n                              <button \r\n                                onClick={() => votePost(post.id, 'downVote')}\r\n                                >\r\n                                DownVote\r\n                              </button>\r\n                          </div>\r\n                      </div>\r\n                  </section>\r\n              </Fragment>\r\n            }\r\n            <div className=\"my-2\">\r\n                <button \r\n                    onClick={() => setCommentToggle(!commentToggle)} \r\n                    type=\"button\" \r\n                    className=\"btn create-post\">\r\n                        Add Comment\r\n                </button>\r\n                </div>\r\n                {\r\n                  commentToggle &&\r\n                  <section className=\"post-section\">\r\n                    <form className=\"form\" onSubmit={(e) => onSubmitHandle(e)}>\r\n                      <div className=\"form-group\">\r\n                      <input \r\n                        type=\"text\" \r\n                        placeholder=\"*Author\" \r\n                        name=\"author\" \r\n                        value={author}\r\n                        onChange={(e) => onChangeHandle(e)}\r\n                        />\r\n                      <small className=\"form-text\">Full name of author</small>\r\n                    </div>\r\n                  <div className=\"form-group\">\r\n                            < textarea\r\n                    placeholder=\"*Post\" \r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={(e) => onChangeHandle(e)}\r\n                    />\r\n                    <small className=\"form-text\">Add your comment here</small>\r\n                  </div>\r\n                  <input type=\"submit\" value=\"Submit\"/>\r\n                </form>\r\n                </section>\r\n                }\r\n              {\r\n                comments === null || loader ? <Spinner /> : <Fragment>\r\n                  {\r\n                    comments.map(comment => (\r\n                      <CommentItem key={comment.id} comment={comment} />\r\n                ))}\r\n              </Fragment>\r\n              }\r\n      </Fragment>\r\n  )\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  getSinglePost: PropTypes.func.isRequired,\r\n  votePost: PropTypes.func.isRequired,\r\n  getComments: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post,\r\n  comment: state.comments,\r\n});\r\n\r\nexport default connect(mapStateToProps, { \r\n  getSinglePost, \r\n  votePost,\r\n  getComments,\r\n  deletePost,\r\n  addComment,\r\n})(SinglePost)\r\n","H:\\Udacity Projects\\readable-app\\frontend\\src\\actions\\comments.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\reducers\\comments.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\AddPost.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\CommentItem.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\EditPost.js",[],"H:\\Udacity Projects\\readable-app\\frontend\\src\\components\\EditComment.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"115","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":35,"nodeType":"131","messageId":"132","endLine":5,"endColumn":51},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],["133"],["134"],["133"],["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'getSingleComment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]